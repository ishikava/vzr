!function (e) {
    "use strict";
    "function" == typeof define && define.amd ? define(["jquery"], e) : e(jQuery)
}(function (g) {
    "use strict";

    function l(e, t) {
        var n = this;
        n.element = e, n.el = g(e), n.suggestions = [], n.badQueries = [], n.selectedIndex = -1, n.currentValue = n.element.value, n.intervalId = 0, n.cachedResponse = {}, n.enrichmentCache = {}, n.currentRequest = null, n.inputPhase = g.Deferred(), n.fetchPhase = g.Deferred(), n.enrichPhase = g.Deferred(), n.onChangeTimeout = null, n.triggering = {}, n.$wrapper = null, n.options = g.extend({}, S, t), n.classes = {
            hint: "suggestions-hint",
            mobile: "suggestions-mobile",
            nowrap: "suggestions-nowrap",
            selected: "suggestions-selected",
            suggestion: "suggestions-suggestion",
            subtext: "suggestions-subtext",
            subtext_inline: "suggestions-subtext suggestions-subtext_inline",
            subtext_delimiter: "suggestions-subtext-delimiter",
            subtext_label: "suggestions-subtext suggestions-subtext_label",
            removeConstraint: "suggestions-remove",
            value: "suggestions-value"
        }, n.disabled = !1, n.selection = null, n.$viewport = g(window), n.$body = g(document.body), n.type = null, n.status = {}, n.setupElement(), n.initializer = g.Deferred(), n.el.is(":visible") ? n.initializer.resolve() : n.deferInitialization(), n.initializer.done(g.proxy(n.initialize, n))
    }

    var a, r, t, u, n, c, i = 13, s = 27, o = 9, d = 32, h = 38, p = 40, f = {}, m = ".suggestions", v = "suggestions",
        y = "\\s\"'~\\*\\.,:\\|\\[\\]\\(\\)\\{\\}<>№", b = new RegExp("[" + y + "]+", "g"),
        x = "\\-\\+\\/\\\\\\?!@#$%^&", w = new RegExp("[" + x + "]+", "g"), S = {
            autoSelectFirst: !1,
            serviceUrl: null,
            onSearchStart: g.noop,
            onSearchComplete: g.noop,
            onSearchError: g.noop,
            onSuggestionsFetch: null,
            onSelect: null,
            onSelectNothing: null,
            onInvalidateSelection: null,
            minChars: 1,
            deferRequestBy: 100,
            params: {},
            paramName: "query",
            timeout: 3e3,
            formatResult: null,
            formatSelected: null,
            noCache: !1,
            containerClass: "suggestions-suggestions",
            tabDisabled: !1,
            triggerSelectOnSpace: !1,
            triggerSelectOnEnter: !0,
            triggerSelectOnBlur: !0,
            preventBadQueries: !1,
            hint: "Выберите вариант или продолжите ввод",
            type: null,
            requestMode: "suggest",
            count: 5,
            $helpers: null,
            headers: null,
            scrollOnFocus: !0,
            mobileWidth: 980,
            initializeInterval: 100
        }, C = {
            chains: {}, on: function (e, t) {
                return this.get(e).push(t), this
            }, get: function (e) {
                var t = this.chains;
                return t[e] || (t[e] = [])
            }
        }, _ = (t = 0, {
            escapeRegExChars: function (e) {
                return e.replace(/[\-\[\]\/\{\}\(\)\*\+\?\.\\\^\$\|]/g, "\\$&")
            }, escapeHtml: function (n) {
                return n && g.each({
                    "&": "&amp;",
                    "<": "&lt;",
                    ">": "&gt;",
                    '"': "&quot;",
                    "'": "&#x27;",
                    "/": "&#x2F;"
                }, function (e, t) {
                    n = n.replace(new RegExp(e, "g"), t)
                }), n
            }, getDefaultType: function () {
                return g.support.cors ? "POST" : "GET"
            }, getDefaultContentType: function () {
                return g.support.cors ? "application/json" : "application/x-www-form-urlencoded"
            }, fixURLProtocol: function (e) {
                return g.support.cors ? e : e.replace(/^https?:/, location.protocol)
            }, addUrlParams: function (e, t) {
                return e + (/\?/.test(e) ? "&" : "?") + g.param(t)
            }, serialize: function (e) {
                return g.support.cors ? JSON.stringify(e, function (e, t) {
                    return null === t ? void 0 : t
                }) : g.param(e, !0)
            }, compact: function (e) {
                return g.grep(e, function (e) {
                    return !!e
                })
            }, delay: function (e, t) {
                return setTimeout(e, t || 0)
            }, uniqueId: function (e) {
                return (e || "") + ++t
            }, slice: function (e, t) {
                return Array.prototype.slice.call(e, t)
            }, areSame: function n(e, i) {
                var s = !0;
                return typeof e == typeof i && ("object" == typeof e && null != e && null != i ? (g.each(e, function (e, t) {
                    return s = n(t, i[e])
                }), s) : e === i)
            }, arrayMinus: function (e, n) {
                return n ? g.grep(e, function (e, t) {
                    return -1 === g.inArray(e, n)
                }) : e
            }, arrayMinusWithPartialMatching: function (e, n) {
                return n ? g.grep(e, function (t, e) {
                    return !n.some(function (e) {
                        return 0 === e.indexOf(t)
                    })
                }) : e
            }, getWords: function (e, t) {
                e = e.replace(/(\d+)([а-яА-ЯёЁ]{2,})/g, "$1 $2").replace(/([а-яА-ЯёЁ]+)(\d+)/g, "$1 $2");
                var n = this.compact(e.split(b)), e = n.pop(), t = this.arrayMinus(n, t);
                return t.push(e), t
            }, normalize: function (e, t) {
                return this.getWords(e, t).join(" ")
            }, stringEncloses: function (e, t) {
                return e.length > t.length && -1 !== e.indexOf(t)
            }, fieldsNotEmpty: function (n, e) {
                if (!g.isPlainObject(n)) return !1;
                var i = !0;
                return g.each(e, function (e, t) {
                    return i = !!n[t]
                }), i
            }, getDeepValue: function e(t, n) {
                var i = n.split("."), n = i.shift();
                return t && (i.length ? e(t[n], i.join(".")) : t[n])
            }, reWordExtractor: function () {
                return new RegExp("([^" + y + "]*)([" + y + "]*)", "g")
            }, formatToken: function (e) {
                return e && e.toLowerCase().replace(/[ёЁ]/g, "е")
            }, withSubTokens: function (e) {
                var i = [];
                return g.each(e, function (e, t) {
                    var n = t.split(w);
                    i.push(t), 1 < n.length && (i = i.concat(_.compact(n)))
                }), i
            }
        }), e = (a = k(function (e) {
            return e
        }), r = k(function (e) {
            return e.replace(/, (?:д|вл|двлд|к) .+$/, "")
        }), {
            matchByNormalizedQuery: function (e, t) {
                var n = e.toLowerCase(), i = this && this.stopwords, s = _.normalize(n, i), o = [];
                return g.each(t, function (e, t) {
                    t = t.value.toLowerCase();
                    return !_.stringEncloses(n, t) && (!(0 < t.indexOf(s)) && void (s === _.normalize(t, i) && o.push(e)))
                }), 1 === o.length ? o[0] : -1
            }, matchByWords: function (e, t) {
                var n, i = this && this.stopwords, s = e.toLowerCase(), o = [];
                return a(t) && (n = _.withSubTokens(_.getWords(s, i)), g.each(t, function (e, t) {
                    t = t.value.toLowerCase();
                    if (_.stringEncloses(s, t)) return !1;
                    t = _.withSubTokens(_.getWords(t, i));
                    0 === _.arrayMinus(n, t).length && o.push(e)
                })), 1 === o.length ? o[0] : -1
            }, matchByWordsAddress: function (e, t) {
                var n, i = this && this.stopwords, s = e.toLowerCase(), o = -1;
                return r(t) && (n = _.withSubTokens(_.getWords(s, i)), g.each(t, function (e, t) {
                    t = t.value.toLowerCase();
                    if (_.stringEncloses(s, t)) return !1;
                    t = _.withSubTokens(_.getWords(t, i));
                    return 0 === _.arrayMinus(n, t).length ? (o = e, !1) : void 0
                })), o
            }, matchByFields: function (e, n) {
                var t = this && this.stopwords, i = this && this.fieldsStopwords,
                    t = _.withSubTokens(_.getWords(e.toLowerCase(), t)), s = [];
                return 1 === n.length && (i && g.each(i, function (e, t) {
                    e = _.getDeepValue(n[0], e), t = e && _.withSubTokens(_.getWords(e.toLowerCase(), t));
                    t && t.length && (s = s.concat(t))
                }), 0 === _.arrayMinusWithPartialMatching(t, s).length) ? 0 : -1
            }
        });

    function k(n) {
        return function (e) {
            if (0 === e.length) return !1;
            if (1 === e.length) return !0;
            var t = n(e[0].value);
            return 0 === g.grep(e, function (e) {
                return 0 === n(e.value).indexOf(t)
            }, !0).length
        }
    }

    function P(e, t) {
        return n.test(t) && !n.test(e) ? t : e
    }

    u = ["ао", "аобл", "дом", "респ", "а/я", "аал", "автодорога", "аллея", "арбан", "аул", "б-р", "берег", "бугор", "вал", "вл", "волость", "въезд", "высел", "г", "городок", "гск", "д", "двлд", "днп", "дор", "дп", "ж/д_будка", "ж/д_казарм", "ж/д_оп", "ж/д_платф", "ж/д_пост", "ж/д_рзд", "ж/д_ст", "жилзона", "жилрайон", "жт", "заезд", "заимка", "зона", "к", "казарма", "канал", "кв", "кв-л", "км", "кольцо", "комн", "кордон", "коса", "кп", "край", "линия", "лпх", "м", "массив", "местность", "мкр", "мост", "н/п", "наб", "нп", "обл", "округ", "остров", "оф", "п", "п/о", "п/р", "п/ст", "парк", "пгт", "пер", "переезд", "пл", "пл-ка", "платф", "погост", "полустанок", "починок", "пр-кт", "проезд", "промзона", "просек", "просека", "проселок", "проток", "протока", "проулок", "р-н", "рзд", "россия", "рп", "ряды", "с", "с/а", "с/мо", "с/о", "с/п", "с/с", "сад", "сквер", "сл", "снт", "спуск", "ст", "ст-ца", "стр", "тер", "тракт", "туп", "у", "ул", "уч-к", "ф/х", "ферма", "х", "ш", "бульвар", "владение", "выселки", "гаражно-строительный", "город", "деревня", "домовладение", "дорога", "квартал", "километр", "комната", "корпус", "литер", "леспромхоз", "местечко", "микрорайон", "набережная", "область", "переулок", "платформа", "площадка", "площадь", "поселение", "поселок", "проспект", "разъезд", "район", "республика", "село", "сельсовет", "слобода", "сооружение", "станица", "станция", "строение", "территория", "тупик", "улица", "улус", "участок", "хутор", "шоссе"], n = /<strong>/, c = {
        LEGAL: [2, 2, 5, 1],
        INDIVIDUAL: [2, 2, 6, 2]
    }, f.NAME = {
        urlSuffix: "fio",
        matchers: [e.matchByNormalizedQuery, e.matchByWords],
        fieldNames: {surname: "фамилия", name: "имя", patronymic: "отчество"},
        alwaysContinueSelecting: !0,
        isDataComplete: function (e) {
            var t, n = this.options.params, i = e.data;
            return (n = g.isFunction(n) ? n.call(this.element, e.value) : n) && n.parts ? t = g.map(n.parts, function (e) {
                return e.toLowerCase()
            }) : (t = ["surname", "name"], n = "surname", (n = (e = e).data && e.data[n]) && new RegExp("^" + _.escapeRegExChars(n) + "([" + y + "]|$)", "i").test(e.value) && t.push("patronymic")), _.fieldsNotEmpty(i, t)
        },
        composeValue: function (e) {
            return _.compact([e.surname, e.name, e.patronymic]).join(" ")
        }
    }, f.ADDRESS = {
        urlSuffix: "address",
        matchers: [g.proxy(e.matchByNormalizedQuery, {stopwords: u}), g.proxy(e.matchByWordsAddress, {stopwords: u})],
        dataComponents: [{id: "kladr_id", fields: ["kladr_id"], forBounds: !1, forLocations: !0}, {
            id: "postal_code",
            fields: ["postal_code"],
            forBounds: !1,
            forLocations: !0
        }, {id: "country", fields: ["country"], forBounds: !1, forLocations: !0}, {
            id: "region",
            fields: ["region", "region_type", "region_type_full", "region_with_type"],
            forBounds: !0,
            forLocations: !0,
            kladrFormat: {digits: 2, zeros: 11}
        }, {
            id: "area",
            fields: ["area", "area_type", "area_type_full", "area_with_type"],
            forBounds: !0,
            forLocations: !0,
            kladrFormat: {digits: 5, zeros: 8}
        }, {
            id: "city",
            fields: ["city", "city_type", "city_type_full", "city_with_type"],
            forBounds: !0,
            forLocations: !0,
            kladrFormat: {digits: 8, zeros: 5}
        }, {
            id: "settlement",
            fields: ["settlement", "settlement_type", "settlement_type_full", "settlement_with_type"],
            forBounds: !0,
            forLocations: !0,
            kladrFormat: {digits: 11, zeros: 2}
        }, {
            id: "street",
            fields: ["street", "street_type", "street_type_full", "street_with_type"],
            forBounds: !0,
            forLocations: !0,
            kladrFormat: {digits: 15, zeros: 2}
        }, {
            id: "house",
            fields: ["house", "house_type", "house_type_full", "block", "block_type"],
            forBounds: !0,
            forLocations: !1,
            kladrFormat: {digits: 19}
        }],
        unformattableTokens: u,
        enrichmentEnabled: !0,
        geoEnabled: !0,
        isDataComplete: function (e) {
            var t = [this.bounds.to || "flat"], e = e.data;
            return !g.isPlainObject(e) || _.fieldsNotEmpty(e, t)
        },
        composeValue: function (e) {
            return _.compact([e.region_with_type || _.compact([e.region, e.region_type]).join(" "), e.area_with_type || _.compact([e.area_type, e.area]).join(" "), e.city_with_type || _.compact([e.city_type, e.city]).join(" "), e.settlement_with_type || _.compact([e.settlement_type, e.settlement]).join(" "), e.street_with_type || _.compact([e.street_type, e.street]).join(" "), _.compact([e.house_type, e.house, e.block_type, e.block]).join(" "), _.compact([e.flat_type, e.flat]).join(" "), e.postal_box ? "а/я " + e.postal_box : null]).join(", ")
        }
    }, f.PARTY = {
        urlSuffix: "party",
        matchers: [g.proxy(e.matchByFields, {
            fieldsStopwords: {
                value: null,
                "data.address.value": u,
                "data.inn": null,
                "data.ogrn": null
            }
        })],
        geoEnabled: !0,
        formatResult: function (e, t, n, i) {
            var s = this,
                o = P(s.type.formatResultInn.call(s, n, t), s.highlightMatches(_.getDeepValue(n.data, "ogrn"), t, n)),
                a = s.highlightMatches(_.getDeepValue(n.data, "management.name"), t, n),
                r = _.getDeepValue(n.data, "address.value") || "";
            return s.isMobile && ((i = i || {}).maxLength = 50), e = function (e, t, n, i, s) {
                return P(this.highlightMatches(e, n, i, s), this.highlightMatches(t, n, i, s))
            }.call(s, e, _.getDeepValue(n.data, "name.latin"), t, n, i), e = s.wrapFormattedValue(e, n), r && (r = r.replace(/^(\d{6}?\s+|Россия,\s+)/i, ""), r = s.isMobile ? r.replace(new RegExp("^([^" + y + "]+[" + y + "]+[^" + y + "]+).*"), "$1") : s.highlightMatches(r, t, n, {unformattableTokens: u})), (o || r || a) && (e += '<div class="' + s.classes.subtext + '"><span class="' + s.classes.subtext_inline + '">' + (o || "") + "</span>" + (P(r, a) || "") + "</div>"), e
        },
        formatResultInn: function (e, t) {
            var i, n = e.data && e.data.inn, s = c[e.data && e.data.type], o = /\d/;
            return n ? (i = this.highlightMatches(n, t, e), s && (i = i.split(""), i = g.map(s, function (e) {
                for (var t, n = ""; e && (t = i.shift());) n += t, o.test(t) && e--;
                return n
            }).join('<span class="' + this.classes.subtext_delimiter + '"></span>') + i.join("")), i) : void 0
        }
    }, f.EMAIL = {
        urlSuffix: "email", matchers: [e.matchByNormalizedQuery], isQueryRequestable: function (e) {
            return this.options.suggest_local || 0 <= e.indexOf("@")
        }
    }, f.BANK = {
        urlSuffix: "bank",
        matchers: [g.proxy(e.matchByFields, {fieldsStopwords: {value: null, "data.bic": null}})],
        formatResult: function (e, t, n, i) {
            var s = this, o = s.highlightMatches(_.getDeepValue(n.data, "bic"), t, n),
                a = _.getDeepValue(n.data, "address.value") || "";
            return e = s.highlightMatches(e, t, n, i), e = s.wrapFormattedValue(e, n), a && (a = a.replace(/^\d{6}( РОССИЯ)?, /i, ""), a = s.isMobile ? a.replace(new RegExp("^([^" + y + "]+[" + y + "]+[^" + y + "]+).*"), "$1") : s.highlightMatches(a, t, n, {unformattableTokens: u})), (o || a) && (e += '<div class="' + s.classes.subtext + '"><span class="' + s.classes.subtext_inline + '">' + o + "</span>" + a + "</div>"), e
        },
        formatSelected: function (e) {
            return _.getDeepValue(e, "data.name.payment")
        }
    }, g.extend(S, {suggest_local: !0});
    var E, I, L = {
        suggest: {
            defaultParams: {
                type: _.getDefaultType(),
                dataType: "json",
                contentType: _.getDefaultContentType()
            }, addTypeInUrl: !0
        },
        detectAddressByIp: {defaultParams: {type: "GET", dataType: "json"}, addTypeInUrl: !1},
        status: {defaultParams: {type: "GET", dataType: "json"}, addTypeInUrl: !0},
        findById: {
            defaultParams: {type: _.getDefaultType(), dataType: "json", contentType: _.getDefaultContentType()},
            addTypeInUrl: !0
        }
    }, R = {
        suggest: {method: "suggest", userSelect: !0, updateValue: !0, enrichmentEnabled: !0},
        findById: {method: "findById", userSelect: !1, updateValue: !1, enrichmentEnabled: !1}
    };
    l.utils = _, l.defaultOptions = S, l.version = "16.6.3", (g.Suggestions = l).prototype = {
        initialize: function () {
            var e = this;
            e.uniqueId = _.uniqueId("i"), e.createWrapper(), e.notify("initialize"), e.bindWindowEvents(), e.setOptions(), e.fixPosition()
        }, deferInitialization: function () {
            function e() {
                n.initializer.resolve(), n.enable()
            }

            var t, n = this, i = "mouseover focus keydown";
            n.initializer.always(function () {
                n.el.off(i, e), clearInterval(t)
            }), n.disabled = !0, n.el.on(i, e), t = setInterval(function () {
                n.el.is(":visible") && e()
            }, n.options.initializeInterval)
        }, isInitialized: function () {
            return "resolved" === this.initializer.state()
        }, dispose: function () {
            var e = this;
            e.initializer.reject(), e.notify("dispose"), e.el.removeData(v).removeClass("suggestions-input"), e.unbindWindowEvents(), e.removeWrapper(), e.el.trigger("suggestions-dispose")
        }, notify: function (e) {
            var t = this, n = _.slice(arguments, 1);
            return g.map(C.get(e), function (e) {
                return e.apply(t, n)
            })
        }, createWrapper: function () {
            var e = this;
            e.$wrapper = g('<div class="suggestions-wrapper"/>'), e.el.after(e.$wrapper), e.$wrapper.on("mousedown" + m, g.proxy(e.onMousedown, e))
        }, removeWrapper: function () {
            this.$wrapper && this.$wrapper.remove(), g(this.options.$helpers).off(m)
        }, onMousedown: function (e) {
            var n = this;
            e.preventDefault(), n.cancelBlur = !0, _.delay(function () {
                delete n.cancelBlur
            }), 0 == g(e.target).closest(".ui-menu-item").length && _.delay(function () {
                g(document).one("mousedown", function (e) {
                    var t = n.el.add(n.$wrapper).add(n.options.$helpers);
                    (t = (t = n.options.floating ? t.add(n.$container) : t).filter(function () {
                        return this === e.target || g.contains(this, e.target)
                    })).length || n.hide()
                })
            })
        }, bindWindowEvents: function () {
            var e = this, t = g.proxy(e.fixPosition, e);
            e.$viewport.on("resize" + m + e.uniqueId, t).on("scroll" + m + e.uniqueId, t)
        }, unbindWindowEvents: function () {
            this.$viewport.off("resize" + m + this.uniqueId).off("scroll" + m + this.uniqueId)
        }, scrollToTop: function () {
            var e = this.options.scrollOnFocus;
            (e = !0 === e ? this.el : e) instanceof g && 0 < e.length && g("body,html").animate({scrollTop: e.offset().top}, "fast")
        }, setOptions: function (e) {
            var n = this;
            g.extend(n.options, e), g.each({type: f, requestMode: R}, function (e, t) {
                if (n[e] = t[n.options[e]], !n[e]) throw n.disable(), "`" + e + "` option is incorrect! Must be one of: " + g.map(t, function (e, t) {
                    return '"' + t + '"'
                }).join(", ")
            }), g(n.options.$helpers).off(m).on("mousedown" + m, g.proxy(n.onMousedown, n)), n.isInitialized() && n.notify("setOptions")
        }, fixPosition: function (e) {
            var t = this, n = {};
            t.isMobile = t.$viewport.width() <= t.options.mobileWidth, t.isInitialized() && (!e || "scroll" != e.type || t.options.floating || t.isMobile) && (t.$container.appendTo(t.options.floating ? t.$body : t.$wrapper), t.notify("resetPosition"), t.el.css("paddingLeft", ""), t.el.css("paddingRight", ""), n.paddingLeft = parseFloat(t.el.css("paddingLeft")), n.paddingRight = parseFloat(t.el.css("paddingRight")), g.extend(n, t.el.offset()), n.borderTop = "none" == t.el.css("border-top-style") ? 0 : parseFloat(t.el.css("border-top-width")), n.borderLeft = "none" == t.el.css("border-left-style") ? 0 : parseFloat(t.el.css("border-left-width")), n.innerHeight = t.el.innerHeight(), n.innerWidth = t.el.innerWidth(), n.outerHeight = t.el.outerHeight(), n.componentsLeft = 0, n.componentsRight = 0, e = t.$wrapper.offset(), e = {
                top: n.top - e.top,
                left: n.left - e.left
            }, t.notify("fixPosition", e, n), n.componentsLeft > n.paddingLeft && t.el.css("paddingLeft", n.componentsLeft + "px"), n.componentsRight > n.paddingRight && t.el.css("paddingRight", n.componentsRight + "px"))
        }, clearCache: function () {
            this.cachedResponse = {}, this.enrichmentCache = {}, this.badQueries = []
        }, clear: function () {
            var e = this;
            e.isInitialized() && (e.clearCache(), e.currentValue = "", e.selection = null, e.hide(), e.suggestions = [], e.el.val(""), e.el.trigger("suggestions-clear"), e.notify("clear"))
        }, disable: function () {
            this.disabled = !0, this.abortRequest(), this.visible && this.hide()
        }, enable: function () {
            this.disabled = !1
        }, isUnavailable: function () {
            return this.disabled
        }, update: function () {
            var e = this, t = e.el.val();
            e.isInitialized() && (e.currentValue = t, e.isQueryRequestable(t) ? e.updateSuggestions(t) : e.hide())
        }, setSuggestion: function (e) {
            var t, n = this;
            g.isPlainObject(e) && g.isPlainObject(e.data) && (e = g.extend(!0, {}, e), n.bounds.own.length && (n.checkValueBounds(e), t = n.copyBoundedData(e.data, n.bounds.all), e.data.kladr_id && (t.kladr_id = n.getBoundedKladrId(e.data.kladr_id, n.bounds.all)), e.data = t), t = n.getSuggestionValue(e) || "", n.currentValue = t, n.el.val(t), n.selection = e, n.suggestions = [e], n.abortRequest(), n.el.trigger("suggestions-set"))
        }, fixData: function () {
            var t = this, e = t.extendedCurrentValue(), n = t.el.val(), i = g.Deferred();
            i.done(function (e) {
                t.selectSuggestion(e, 0, n, {hasBeenEnriched: !0}), t.el.trigger("suggestions-fixdata", e)
            }).fail(function () {
                t.selection = null, t.currentValue = "", t.el.val(t.currentValue), t.el.trigger("suggestions-fixdata")
            }), t.isQueryRequestable(e) ? (t.currentValue = e, t.getSuggestions(e, {
                count: 1,
                from_bound: null,
                to_bound: null
            }).done(function (e) {
                e = e[0];
                e ? i.resolve(e) : i.reject()
            }).fail(function () {
                i.reject()
            })) : i.reject()
        }, extendedCurrentValue: function () {
            var e = this.getParentInstance(), t = e && e.extendedCurrentValue(), e = g.trim(this.el.val());
            return _.compact([t, e]).join(" ")
        }, getAjaxParams: function (e, t) {
            var n = this, i = g.trim(n.options.token), s = g.trim(n.options.partner), o = n.options.serviceUrl,
                a = L[e], r = g.extend({timeout: n.options.timeout}, a.defaultParams), u = {};
            return /\/$/.test(o) || (o += "/"), o += e, a.addTypeInUrl && (o += "/" + n.type.urlSuffix), o = _.fixURLProtocol(o), g.support.cors ? (i && (u.Authorization = "Token " + i), s && (u["X-Partner"] = s), u["X-Version"] = l.version, r.headers || (r.headers = {}), g.extend(r.headers, n.options.headers, u)) : (i && (u.token = i), s && (u.partner = s), u.version = l.version, o = _.addUrlParams(o, u)), r.url = o, g.extend(r, t)
        }, isQueryRequestable: function (e) {
            var t = e.length >= this.options.minChars;
            return t = t && this.type.isQueryRequestable ? this.type.isQueryRequestable.call(this, e) : t
        }, constructRequestParams: function (e, t) {
            var n = this, i = n.options,
                s = g.isFunction(i.params) ? i.params.call(n.element, e) : g.extend({}, i.params);
            return n.type.constructRequestParams && g.extend(s, n.type.constructRequestParams.call(n)), g.each(n.notify("requestParams"), function (e, t) {
                g.extend(s, t)
            }), s[i.paramName] = e, g.isNumeric(i.count) && 0 < i.count && (s.count = i.count), g.extend(s, t)
        }, updateSuggestions: function (t) {
            var n = this;
            n.fetchPhase = n.getSuggestions(t).done(function (e) {
                n.assignSuggestions(e, t)
            })
        }, getSuggestions: function (i, e, t) {
            var s = this, o = s.options, a = t && t.noCallbacks, n = t && t.useEnrichmentCache,
                t = s.constructRequestParams(i, e), r = g.param(t || {}), u = g.Deferred(), e = s.cachedResponse[r];
            return e && g.isArray(e.suggestions) ? u.resolve(e.suggestions) : !s.isBadQuery(i) && (a || !1 !== o.onSearchStart.call(s.element, t)) ? s.doGetSuggestions(t).done(function (e) {
                s.processResponse(e) && i == s.currentValue ? (o.noCache || (n ? s.enrichmentCache[i] = e.suggestions[0] : (s.enrichResponse(e, i), s.cachedResponse[r] = e, o.preventBadQueries && 0 === e.suggestions.length && s.badQueries.push(i))), u.resolve(e.suggestions)) : u.reject(), a || o.onSearchComplete.call(s.element, i, e.suggestions)
            }).fail(function (e, t, n) {
                u.reject(), a || "abort" === t || o.onSearchError.call(s.element, i, e, t, n)
            }) : u.reject(), u
        }, doGetSuggestions: function (e) {
            var t = this, e = g.ajax(t.getAjaxParams(t.requestMode.method, {data: _.serialize(e)}));
            return t.abortRequest(), t.currentRequest = e, t.notify("request"), e.always(function () {
                t.currentRequest = null, t.notify("request")
            }), e
        }, isBadQuery: function (n) {
            if (!this.options.preventBadQueries) return !1;
            var i = !1;
            return g.each(this.badQueries, function (e, t) {
                return !(i = 0 === n.indexOf(t))
            }), i
        }, abortRequest: function () {
            this.currentRequest && this.currentRequest.abort()
        }, processResponse: function (e) {
            var t = this;
            return !(!e || !g.isArray(e.suggestions)) && (t.verifySuggestionsFormat(e.suggestions), t.setUnrestrictedValues(e.suggestions), g.isFunction(t.options.onSuggestionsFetch) && (t = t.options.onSuggestionsFetch.call(t.element, e.suggestions), g.isArray(t) && (e.suggestions = t)), !0)
        }, verifySuggestionsFormat: function (n) {
            "string" == typeof n[0] && g.each(n, function (e, t) {
                n[e] = {value: t, data: null}
            })
        }, getSuggestionValue: function (e, t) {
            var n, i = this, s = i.options.formatSelected || i.type.formatSelected;
            return n = "string" != typeof (n = g.isFunction(s) ? s.call(i, e) : n) || 0 == n.length ? t && i.options.restrict_value && i.type.composeValue ? i.type.composeValue(i.getUnrestrictedData(e.data)) : e.value : n
        }, assignSuggestions: function (e, t) {
            this.suggestions = e, this.notify("assignSuggestions", t)
        }, shouldRestrictValues: function () {
            return this.options.restrict_value && this.constraints && 1 == Object.keys(this.constraints).length
        }, setUnrestrictedValues: function (e) {
            var n = this.shouldRestrictValues(), i = this.getFirstConstraintLabel();
            g.each(e, function (e, t) {
                t.unrestricted_value || (t.unrestricted_value = n ? i + ", " + t.value : t.value)
            })
        }, areSuggestionsSame: function (e, t) {
            return e && t && e.value === t.value && _.areSame(e.data, t.data)
        }
    }, e = {
        setupElement: function () {
            this.el.attr("autocomplete", "off").addClass("suggestions-input").css("box-sizing", "border-box")
        }, bindElementEvents: function () {
            var e = this;
            e.el.on("keydown" + m, g.proxy(e.onElementKeyDown, e)), e.el.on(["keyup" + m, "cut" + m, "paste" + m, "input" + m].join(" "), g.proxy(e.onElementKeyUp, e)), e.el.on("blur" + m, g.proxy(e.onElementBlur, e)), e.el.on("focus" + m, g.proxy(e.onElementFocus, e))
        }, unbindElementEvents: function () {
            this.el.off(m)
        }, onElementBlur: function () {
            var e = this;
            return e.cancelBlur ? void (e.cancelBlur = !1) : (e.options.triggerSelectOnBlur ? e.isUnavailable() || e.selectCurrentValue({noSpace: !0}).always(function () {
                e.hide()
            }) : e.hide(), void (e.fetchPhase.abort && e.fetchPhase.abort()))
        }, onElementFocus: function () {
            this.cancelFocus || _.delay(g.proxy(this.completeOnFocus, this)), this.cancelFocus = !1
        }, onElementKeyDown: function (e) {
            var t = this;
            if (!t.isUnavailable()) if (t.visible) {
                switch (e.which) {
                    case s:
                        t.el.val(t.currentValue), t.hide(), t.abortRequest();
                        break;
                    case o:
                        if (!1 === t.options.tabDisabled) return;
                        break;
                    case i:
                        t.options.triggerSelectOnEnter && t.selectCurrentValue();
                        break;
                    case d:
                        return void (t.options.triggerSelectOnSpace && t.isCursorAtEnd() && (e.preventDefault(), t.selectCurrentValue({
                            continueSelecting: !0,
                            dontEnrich: !0
                        }).fail(function () {
                            t.currentValue += " ", t.el.val(t.currentValue), t.proceedChangedValue()
                        })));
                    case h:
                        t.moveUp();
                        break;
                    case p:
                        t.moveDown();
                        break;
                    default:
                        return
                }
                e.stopImmediatePropagation(), e.preventDefault()
            } else switch (e.which) {
                case p:
                    t.suggest();
                    break;
                case i:
                    t.options.triggerSelectOnEnter && t.triggerOnSelectNothing()
            }
        }, onElementKeyUp: function (e) {
            var t = this;
            if (!t.isUnavailable()) {
                switch (e.which) {
                    case h:
                    case p:
                    case i:
                        return
                }
                clearTimeout(t.onChangeTimeout), t.inputPhase.reject(), t.currentValue !== t.el.val() && t.proceedChangedValue()
            }
        }, proceedChangedValue: function () {
            var e = this;
            e.abortRequest(), e.inputPhase = g.Deferred().done(g.proxy(e.onValueChange, e)), 0 < e.options.deferRequestBy ? e.onChangeTimeout = _.delay(function () {
                e.inputPhase.resolve()
            }, e.options.deferRequestBy) : e.inputPhase.resolve()
        }, onValueChange: function () {
            var e, t = this;
            t.selection && (e = t.selection, t.selection = null, t.trigger("InvalidateSelection", e)), t.selectedIndex = -1, t.update(), t.notify("valueChange")
        }, completeOnFocus: function () {
            var e = this;
            e.isUnavailable() || e.isElementFocused() && (e.fixPosition(), e.update(), e.isMobile && (e.setCursorAtEnd(), e.scrollToTop()))
        }, isElementFocused: function () {
            return document.activeElement === this.element
        }, isCursorAtEnd: function () {
            var e, t, n = this.el.val().length;
            try {
                if ("number" == typeof (e = this.element.selectionStart)) return e === n
            } catch (e) {
            }
            return !document.selection || ((t = document.selection.createRange()).moveStart("character", -n), n === t.text.length)
        }, setCursorAtEnd: function () {
            var t = this.element;
            try {
                t.selectionEnd = t.selectionStart = t.value.length, t.scrollLeft = t.scrollWidth
            } catch (e) {
                t.value = t.value
            }
        }
    }, g.extend(l.prototype, e), C.on("initialize", e.bindElementEvents).on("dispose", e.unbindElementEvents), function () {
        function e() {
            g.each(s, function () {
                this.abort()
            }), s = {}
        }

        var s = {};
        e();
        var t = {
            checkStatus: function () {
                function t(e) {
                    g.isFunction(n.options.onSearchError) && n.options.onSearchError.call(n.element, null, i, "error", e)
                }

                var n = this, e = g.trim(n.options.token), e = n.options.type + e, i = s[e];
                (i = i || (s[e] = g.ajax(n.getAjaxParams("status")))).done(function (e) {
                    e.search ? g.extend(n.status, e) : t("Service Unavailable")
                }).fail(function () {
                    t(i.statusText)
                })
            }
        };
        l.resetTokens = e, g.extend(l.prototype, t), C.on("setOptions", t.checkStatus)
    }(), "GET" != _.getDefaultType() && (I = {
        checkLocation: function () {
            var t = this, e = t.options.geoLocation;
            t.type.geoEnabled && e && (t.geoLocation = g.Deferred(), g.isPlainObject(e) || g.isArray(e) ? t.geoLocation.resolve(e) : (E = E || g.ajax(t.getAjaxParams("detectAddressByIp"))).done(function (e) {
                e = e && e.location && e.location.data;
                e && e.kladr_id ? t.geoLocation.resolve(e) : t.geoLocation.reject()
            }).fail(function () {
                t.geoLocation.reject()
            }))
        }, getGeoLocation: function () {
            return this.geoLocation
        }, constructParams: function () {
            var t = {};
            return this.geoLocation && g.isFunction(this.geoLocation.promise) && "resolved" == this.geoLocation.state() && this.geoLocation.done(function (e) {
                t.locations_boost = g.makeArray(e)
            }), t
        }
    }, g.extend(S, {geoLocation: !0}), g.extend(l, {
        resetLocation: function () {
            E = null, l.defaultOptions.geoLocation = !0
        }
    }), g.extend(l.prototype, {getGeoLocation: I.getGeoLocation}), C.on("setOptions", I.checkLocation).on("requestParams", I.constructParams)), I = {
        enrichSuggestion: function (t, e) {
            var n = this, i = g.Deferred();
            return !n.status.enrich || !n.type.enrichmentEnabled || !n.requestMode.enrichmentEnabled || e && e.dontEnrich || t.data && null != t.data.qc ? i.resolve(t) : (n.disableDropdown(), n.currentValue = t.unrestricted_value, n.enrichPhase = n.getSuggestions(t.unrestricted_value, {
                count: 1,
                locations: null,
                locations_boost: null,
                from_bound: null,
                to_bound: null
            }, {noCallbacks: !0, useEnrichmentCache: !0}).always(function () {
                n.enableDropdown()
            }).done(function (e) {
                e = e && e[0];
                i.resolve(e || t, !!e)
            }).fail(function () {
                i.resolve(t)
            }), i)
        }, enrichResponse: function (n, i) {
            var s = this.enrichmentCache[i];
            s && g.each(n.suggestions, function (e, t) {
                return t.value === i ? (n.suggestions[e] = s, !1) : void 0
            })
        }
    }, g.extend(l.prototype, I), I = {
        createContainer: function () {
            var e = this, t = "." + e.classes.suggestion, n = e.options,
                n = g("<div/>").addClass(n.containerClass).css({position: "absolute", display: "none"});
            (e.$container = n).on("click" + m, t, g.proxy(e.onSuggestionClick, e))
        }, removeContainer: function () {
            this.options.floating && this.$container.remove()
        }, setContainerOptions: function () {
            var e = this, t = "mousedown" + m;
            e.$container.off(t), e.options.floating && e.$container.on(t, g.proxy(e.onMousedown, e))
        }, onSuggestionClick: function (e) {
            var t, n = this, i = g(e.target);
            if (!n.dropdownDisabled) {
                for (n.cancelFocus = !0, n.el.focus(); i.length && !(t = i.attr("data-index"));) i = i.closest("." + n.classes.suggestion);
                t && !isNaN(t) && n.select(+t)
            }
        }, setDropdownPosition: function (e, t) {
            var n, i = this, s = i.$viewport.scrollLeft();
            i.isMobile ? (n = i.options.floating ? {
                left: s + "px",
                top: t.top + t.outerHeight + "px"
            } : {
                left: e.left - t.left + s + "px",
                top: e.top + t.outerHeight + "px"
            }).width = i.$viewport.width() + "px" : (n = i.options.floating ? {
                left: t.left + "px",
                top: t.top + t.borderTop + t.innerHeight + "px"
            } : {left: e.left + "px", top: e.top + t.borderTop + t.innerHeight + "px"}, _.delay(function () {
                var e = i.options.width;
                "auto" === e && (e = i.el.outerWidth()), i.$container.outerWidth(e)
            })), i.$container.toggleClass(i.classes.mobile, i.isMobile).css(n), i.containerItemsPadding = t.left + t.borderLeft + t.paddingLeft - s
        }, setItemsPositions: function () {
            this.getSuggestionsItems().css("paddingLeft", this.isMobile ? this.containerItemsPadding + "px" : "")
        }, getSuggestionsItems: function () {
            return this.$container.children("." + this.classes.suggestion)
        }, toggleDropdownEnabling: function (e) {
            this.dropdownDisabled = !e, this.$container.attr("disabled", !e)
        }, disableDropdown: function () {
            this.toggleDropdownEnabling(!1)
        }, enableDropdown: function () {
            this.toggleDropdownEnabling(!0)
        }, hasSuggestionsToChoose: function () {
            var e = this;
            return 1 < e.suggestions.length || 1 === e.suggestions.length && (!e.selection || g.trim(e.suggestions[0].value) !== g.trim(e.selection.value))
        }, suggest: function () {
            var i, s, o = this, e = o.options;
            o.requestMode.userSelect && (o.hasSuggestionsToChoose() ? (i = e.formatResult || o.type.formatResult || o.formatResult, s = [], !o.isMobile && e.hint && o.suggestions.length && s.push('<div class="' + o.classes.hint + '">' + e.hint + "</div>"), o.selectedIndex = -1, g.each(o.suggestions, function (e, t) {
                var n = o.makeSuggestionLabel(o.suggestions, t);
                t == o.selection && (o.selectedIndex = e), s.push('<div class="' + o.classes.suggestion + '" data-index="' + e + '">'), s.push(i.call(o, t.value, o.currentValue, t, {unformattableTokens: o.type.unformattableTokens})), n && s.push('<span class="' + o.classes.subtext_label + '">' + _.escapeHtml(n) + "</span>"), s.push("</div>")
            }), o.$container.html(s.join("")), e.autoSelectFirst && -1 === o.selectedIndex && (o.selectedIndex = 0), -1 !== o.selectedIndex && o.getSuggestionsItems().eq(o.selectedIndex).addClass(o.classes.selected), g.isFunction(e.beforeRender) && e.beforeRender.call(o.element, o.$container), o.$container.show(), o.visible = !0, o.fixPosition(), o.setItemsPositions()) : o.hide())
        }, wrapFormattedValue: function (e, t) {
            t = _.getDeepValue(t.data, "state.status");
            return '<span class="' + this.classes.value + '"' + (t ? ' data-suggestion-status="' + t + '"' : "") + ">" + e + "</span>"
        }, formatResult: function (e, t, n, i) {
            return e = this.highlightMatches(e, t, n, i), this.wrapFormattedValue(e, n)
        }, highlightMatches: function (e, t, n, i) {
            var s, o, a, r, u, l, c = [], d = i && i.unformattableTokens, h = i && i.maxLength, p = _.reWordExtractor();
            if (!e) return "";
            for (i = _.formatToken(t).split(b), i = _.withSubTokens(i), s = g.map(i, function (e) {
                return new RegExp("^((.*)([" + x + "]+))?(" + _.escapeRegExChars(e) + ")([^" + x + "]*[" + x + "]*)", "i")
            }); (o = p.exec(e)) && o[0];) a = o[1], c.push({
                text: a,
                inUpperCase: a.toLowerCase() !== a,
                formatted: _.formatToken(a),
                matchable: !0
            }), o[2] && c.push({text: o[2]});
            for (r = 0; r < c.length; r++) !(u = c[r]).matchable || u.matched || -1 !== g.inArray(u.formatted, d) && !u.inUpperCase || g.each(s, function (e, t) {
                var n, i = t.exec(u.formatted), t = r + 1;
                return i ? ((i = {
                    before: i[1] || "",
                    beforeText: i[2] || "",
                    beforeDelimiter: i[3] || "",
                    text: i[4] || "",
                    after: i[5] || ""
                }).before && (c.splice(r, 0, {
                    text: u.text.substr(0, i.beforeText.length),
                    formatted: i.beforeText,
                    matchable: !0
                }, {text: i.beforeDelimiter}), t += 2, n = i.before.length, u.text = u.text.substr(n), u.formatted = u.formatted.substr(n), r--), n = i.text.length + i.after.length, u.formatted.length > n && (c.splice(t, 0, {
                    text: u.text.substr(n),
                    formatted: u.formatted.substr(n),
                    matchable: !0
                }), u.text = u.text.substr(0, n), u.formatted = u.formatted.substr(0, n)), i.after && (n = i.text.length, c.splice(t, 0, {
                    text: u.text.substr(n),
                    formatted: u.formatted.substr(n)
                }), u.text = u.text.substr(0, n), u.formatted = u.formatted.substr(0, n)), !(u.matched = !0)) : void 0
            });
            if (h) {
                for (r = 0; r < c.length && 0 <= h; r++) (h -= (u = c[r]).text.length) < 0 && (u.text = u.text.substr(0, u.text.length + h) + "...");
                c.length = r
            }
            return t = c, i = g.map(t, function (e) {
                var t = _.escapeHtml(e.text);
                return t = t && e.matched ? "<strong>" + t + "</strong>" : t
            }).join(""), t = i, l = this.classes.nowrap, 1 === (i = t.split(", ")).length ? t : g.map(i, function (e) {
                return '<span class="' + l + '">' + e + "</span>"
            }).join(", ")
        }, makeSuggestionLabel: function (e, n) {
            var t, i, s, o, a = this.type.fieldNames, r = {}, u = _.reWordExtractor(), l = [];
            if (a && (e = e, s = n, o = !1, g.each(e, function (e, t) {
                return !(o = t.value == s.value && t != s) && void 0
            }), o) && n.data && (g.each(a, function (e) {
                var t = n.data[e];
                t && (r[e] = _.formatToken(t))
            }), !g.isEmptyObject(r))) {
                for (; (t = u.exec(_.formatToken(n.value))) && (i = t[1]);) g.each(r, function (e, t) {
                    return t == i ? (l.push(a[e]), delete r[e], !1) : void 0
                });
                if (l.length) return l.join(", ")
            }
        }, hide: function () {
            this.visible = !1, this.selectedIndex = -1, this.$container.hide().empty()
        }, activate: function (e) {
            var t, n = this, i = n.classes.selected;
            return !n.dropdownDisabled && ((t = n.getSuggestionsItems()).removeClass(i), n.selectedIndex = e, -1 !== n.selectedIndex && t.length > n.selectedIndex) ? ((n = t.eq(n.selectedIndex)).addClass(i), n) : null
        }, deactivate: function (e) {
            var t = this;
            t.dropdownDisabled || (t.selectedIndex = -1, t.getSuggestionsItems().removeClass(t.classes.selected), e && t.el.val(t.currentValue))
        }, moveUp: function () {
            var e = this;
            if (!e.dropdownDisabled) return -1 === e.selectedIndex ? void (e.suggestions.length && e.adjustScroll(e.suggestions.length - 1)) : 0 === e.selectedIndex ? void e.deactivate(!0) : void e.adjustScroll(e.selectedIndex - 1)
        }, moveDown: function () {
            var e = this;
            if (!e.dropdownDisabled) return e.selectedIndex === e.suggestions.length - 1 ? void e.deactivate(!0) : void e.adjustScroll(e.selectedIndex + 1)
        }, adjustScroll: function (e) {
            var t, n = this, i = n.activate(e), s = n.$container.scrollTop();
            i && i.length && ((t = i.position().top) < 0 ? n.$container.scrollTop(s + t) : (t = t + i.outerHeight(), (i = n.$container.innerHeight()) < t && n.$container.scrollTop(s - i + t)), n.el.val(n.suggestions[e].value))
        }
    }, g.extend(S, {
        width: "auto",
        floating: !1
    }), g.extend(l.prototype, I), C.on("initialize", I.createContainer).on("dispose", I.removeContainer).on("setOptions", I.setContainerOptions).on("fixPosition", I.setDropdownPosition).on("fixPosition", I.setItemsPositions).on("assignSuggestions", I.suggest), function () {
        function t(e) {
            var t = this, n = g('<span class="suggestions-addon"/>');
            t.owner = e, t.$el = n, t.type = o.NONE, t.visible = !1, t.initialPadding = null, n.on("click", g.proxy(t, "onClick"))
        }

        var s = "addon", o = {NONE: "none", SPINNER: "spinner", CLEAR: "clear"};
        t.prototype = {
            checkType: function () {
                var e = this, n = e.owner.options.addon, i = !1;
                g.each(o, function (e, t) {
                    return !(i = t == n) && void 0
                }), (n = !i ? e.owner.isMobile ? o.CLEAR : o.SPINNER : n) != e.type && (e.type = n, e.$el.attr("data-addon-type", n), e.toggle(!0))
            }, toggle: function (e) {
                var t, n = this;
                switch (n.type) {
                    case o.CLEAR:
                        t = !!n.owner.currentValue;
                        break;
                    case o.SPINNER:
                        t = !!n.owner.currentRequest;
                        break;
                    default:
                        t = !1
                }
                t != n.visible && ((n.visible = t) ? n.show(e) : n.hide(e))
            }, show: function (e) {
                var t = this, n = {opacity: 1};
                e ? (t.$el.show().css(n), t.showBackground(!0)) : t.$el.stop(!0, !0).delay(50).queue(function () {
                    t.$el.show(), t.showBackground(), t.$el.dequeue()
                }).animate(n, "fast")
            }, hide: function (e) {
                var t = this, n = {opacity: 0};
                e && t.$el.hide().css(n), t.$el.stop(!0).animate(n, {
                    duration: "fast", complete: function () {
                        t.$el.hide(), t.hideBackground()
                    }
                })
            }, fixPosition: function (e, t) {
                var n = this, i = t.innerHeight;
                n.checkType(), n.$el.css({
                    left: e.left + t.borderLeft + t.innerWidth - i + "px",
                    top: e.top + t.borderTop + "px",
                    height: i,
                    width: i
                }), n.initialPadding = t.paddingRight, n.width = i, n.visible && (t.componentsRight += i)
            }, showBackground: function (e) {
                var t = this, n = t.owner.el, i = {paddingRight: t.width};
                t.width > t.initialPadding && (t.stopBackground(), e ? n.css(i) : n.animate(i, {
                    duration: "fast",
                    queue: s
                }).dequeue(s))
            }, hideBackground: function (e) {
                var t = this, n = t.owner.el, i = {paddingRight: t.initialPadding};
                t.width > t.initialPadding && (t.stopBackground(!0), e ? n.css(i) : n.delay(1e3, s).animate(i, {
                    duration: "fast",
                    queue: s
                }).dequeue(s))
            }, stopBackground: function (e) {
                this.owner.el.stop(s, !0, e)
            }, onClick: function (e) {
                this.type == o.CLEAR && this.owner.clear()
            }
        };
        var e = function () {
            var e = new t(this);
            this.$wrapper.append(e.$el), this.addon = e
        }, n = function (e, t) {
            this.addon.fixPosition(e, t)
        }, i = function () {
            this.addon.checkType()
        }, a = function () {
            this.addon.toggle()
        }, r = function () {
            this.addon.stopBackground()
        };
        g.extend(S, {addon: null}), C.on("initialize", e).on("setOptions", i).on("fixPosition", n).on("clear", a).on("valueChange", a).on("request", a).on("resetPosition", r)
    }(), function () {
        function o(i, e) {
            var s = this;
            s.instance = e, s.fields = {}, s.specificity = -1, g.isPlainObject(i) && e.type.dataComponents && g.each(e.type.dataComponents, function (e, t) {
                var n = t.id;
                t.forLocations && i[n] && (s.fields[n] = i[n], s.specificity = e)
            }), s.fields.kladr_id && (s.fields = {kladr_id: s.fields.kladr_id}, s.specificity = s.getKladrSpecificity(s.fields.kladr_id))
        }

        function n(e, t) {
            this.id = _.uniqueId("c"), this.deletable = !!e.deletable, this.instance = t, this.locations = g.map(g.makeArray(e && (e.locations || e.restrictions)), function (e) {
                return new o(e, t)
            }), this.locations = g.grep(this.locations, function (e) {
                return e.isValid()
            }), this.label = e.label, null == this.label && t.type.composeValue && (this.label = g.map(this.locations, function (e) {
                return e.getLabel()
            }).join(", ")), this.label && this.isValid() && (this.$el = g(document.createElement("li")).append(g(document.createElement("span")).text(this.label)).attr("data-constraint-id", this.id), this.deletable && this.$el.append(g(document.createElement("span")).addClass(t.classes.removeConstraint)))
        }

        g.extend(o.prototype, {
            getLabel: function () {
                return this.instance.type.composeValue(this.fields)
            }, getFields: function () {
                return this.fields
            }, isValid: function () {
                return !g.isEmptyObject(this.fields)
            }, getKladrSpecificity: function (e) {
                var n, i = -1;
                return this.significantKladr = e.replace(/^(\d{2})(\d*?)(0+)$/g, "$1$2"), n = this.significantKladr.length, g.each(this.instance.type.dataComponents, function (e, t) {
                    t.kladrFormat && n === t.kladrFormat.digits && (i = e)
                }), i
            }, containsData: function (n) {
                var i = !0;
                return this.fields.kladr_id ? !!n.kladr_id && 0 === n.kladr_id.indexOf(this.significantKladr) : (g.each(this.fields, function (e, t) {
                    return i = !!n[e] && n[e].toLowerCase() === t.toLowerCase()
                }), i)
            }
        }), l.ConstraintLocation = o, g.extend(n.prototype, {
            isValid: function () {
                return 0 < this.locations.length
            }, getFields: function () {
                return g.map(this.locations, function (e) {
                    return e.getFields()
                })
            }
        });
        var e = {
            createConstraints: function () {
                var e = this;
                e.constraints = {}, e.$constraints = g('<ul class="suggestions-constraints"/>'), e.$wrapper.append(e.$constraints), e.$constraints.on("click", "." + e.classes.removeConstraint, g.proxy(e.onConstraintRemoveClick, e))
            }, setConstraintsPosition: function (e, t) {
                this.$constraints.css({
                    left: e.left + t.borderLeft + t.paddingLeft + "px",
                    top: e.top + t.borderTop + Math.round((t.innerHeight - this.$constraints.height()) / 2) + "px"
                }), t.componentsLeft += this.$constraints.outerWidth(!0) + t.paddingLeft
            }, onConstraintRemoveClick: function (e) {
                var t = this, e = g(e.target).closest("li"), n = e.attr("data-constraint-id");
                delete t.constraints[n], t.update(), e.fadeOut("fast", function () {
                    t.removeConstraint(n)
                })
            }, setupConstraints: function () {
                var e, n = this, t = n.options.constraints;
                return t ? void (t instanceof g || "string" == typeof t || "number" == typeof t.nodeType ? (e = g(t)).is(n.constraints) || (n.unbindFromParent(), e.is(n.el) || (n.constraints = e, n.bindToParent())) : (n._constraintsUpdating = !0, g.each(n.constraints, g.proxy(n.removeConstraint, n)), g.each(g.makeArray(t), function (e, t) {
                    n.addConstraint(t)
                }), n._constraintsUpdating = !1, n.fixPosition())) : void n.unbindFromParent()
            }, filteredLocation: function (e) {
                var n = [], i = {};
                return g.each(this.type.dataComponents, function () {
                    this.forLocations && n.push(this.id)
                }), g.isPlainObject(e) && g.each(e, function (e, t) {
                    t && 0 <= n.indexOf(e) && (i[e] = t)
                }), g.isEmptyObject(i) ? void 0 : i.kladr_id ? {kladr_id: i.kladr_id} : i
            }, addConstraint: function (e) {
                var t = this;
                !(e = new n(e, t)).isValid() || (t.constraints[e.id] = e).$el && (t.$constraints.append(e.$el), t._constraintsUpdating || t.fixPosition())
            }, removeConstraint: function (e) {
                delete this.constraints[e], this.$constraints.children('[data-constraint-id="' + e + '"]').remove(), this._constraintsUpdating || this.fixPosition()
            }, constructConstraintsParams: function () {
                for (var e, t, n = [], i = this.constraints, s = {}; i instanceof g && (e = i.suggestions()) && !(t = _.getDeepValue(e, "selection.data"));) i = e.constraints;
                return i instanceof g ? (t = new o(t, e).getFields()) && (s.locations = [t], s.restrict_value = !0) : i && (g.each(i, function (e, t) {
                    n = n.concat(t.getFields())
                }), n.length && (s.locations = n, s.restrict_value = this.options.restrict_value)), s
            }, getFirstConstraintLabel: function () {
                var e = g.isPlainObject(this.constraints) && Object.keys(this.constraints)[0];
                return e ? this.constraints[e].label : ""
            }, bindToParent: function () {
                var e = this;
                e.constraints.on(["suggestions-select." + e.uniqueId, "suggestions-invalidateselection." + e.uniqueId, "suggestions-clear." + e.uniqueId].join(" "), g.proxy(e.onParentSelectionChanged, e)).on("suggestions-dispose." + e.uniqueId, g.proxy(e.onParentDispose, e))
            }, unbindFromParent: function () {
                var e = this.constraints;
                e instanceof g && e.off("." + this.uniqueId)
            }, onParentSelectionChanged: function (e, t, n) {
                "suggestions-select" === e.type && !n || this.clear()
            }, onParentDispose: function (e) {
                this.unbindFromParent()
            }, getParentInstance: function () {
                return this.constraints instanceof g && this.constraints.suggestions()
            }, shareWithParent: function (e) {
                var n, t, i, s, o = this.getParentInstance();
                o && o.type === this.type && (n = e, i = (t = o).selection, (s = i && i.data && t.bounds) && g.each(t.bounds.all, function (e, t) {
                    return s = i.data[t] === n.data[t]
                }), !s) && (o.shareWithParent(e), o.setSuggestion(e))
            }, getUnrestrictedData: function (n) {
                var i = [], s = {}, o = -1;
                return g.each(this.constraints, function (e, t) {
                    g.each(t.locations, function (e, t) {
                        t.containsData(n) && t.specificity > o && (o = t.specificity)
                    })
                }), 0 <= o ? (n.region_kladr_id && n.region_kladr_id === n.city_kladr_id && g.each(this.type.dataComponents, function (e, t) {
                    return "city" === t.id ? (i.push.apply(i, t.fields), !1) : void 0
                }), g.each(this.type.dataComponents.slice(0, o + 1), function (e, t) {
                    i.push.apply(i, t.fields)
                }), g.each(n, function (e, t) {
                    -1 === i.indexOf(e) && (s[e] = t)
                })) : s = n, s
            }
        };
        g.extend(S, {
            constraints: null,
            restrict_value: !1
        }), g.extend(l.prototype, e), "GET" != _.getDefaultType() && C.on("initialize", e.createConstraints).on("setOptions", e.setupConstraints).on("fixPosition", e.setConstraintsPosition).on("requestParams", e.constructConstraintsParams).on("dispose", e.unbindFromParent)
    }(), I = {
        proceedQuery: function (e) {
            e.length >= this.options.minChars ? this.updateSuggestions(e) : this.hide()
        }, selectCurrentValue: function (t) {
            var n = this, i = g.Deferred();
            return n.inputPhase.resolve(), n.fetchPhase.done(function () {
                var e;
                n.selection && !n.visible ? i.reject() : (e = n.findSuggestionIndex(), n.select(e, t), -1 === e ? i.reject() : i.resolve(e))
            }).fail(function () {
                i.reject()
            }), i
        }, selectFoundSuggestion: function () {
            this.requestMode.userSelect || this.select(0)
        }, findSuggestionIndex: function () {
            var n, i = this, s = i.selectedIndex;
            return -1 === s && ((n = g.trim(i.el.val())) && g.each(i.type.matchers, function (e, t) {
                return -1 === (s = t(n, i.suggestions))
            })), s
        }, select: function (n, i) {
            var s = this, e = s.suggestions[n], t = i && i.continueSelecting, o = s.currentValue;
            if (!s.triggering.Select) return e ? void s.enrichSuggestion(e, i).done(function (e, t) {
                s.selectSuggestion(e, n, o, g.extend({hasBeenEnriched: t}, i))
            }) : (t || s.selection || s.triggerOnSelectNothing(), void s.onSelectComplete(t))
        }, selectSuggestion: function (e, t, n, i) {
            var s = this, o = i.continueSelecting, a = !s.type.isDataComplete || s.type.isDataComplete.call(s, e),
                r = s.selection;
            s.triggering.Select || (s.type.alwaysContinueSelecting && (o = !0), a && (o = !1), i.hasBeenEnriched && s.suggestions[t] && (s.suggestions[t].data = e.data), s.requestMode.updateValue && (s.checkValueBounds(e), s.currentValue = s.getSuggestionValue(e, i.hasBeenEnriched), !s.currentValue || i.noSpace || a || (s.currentValue += " "), s.el.val(s.currentValue)), s.currentValue ? (s.selection = e, s.areSuggestionsSame(e, r) || s.trigger("Select", e, s.currentValue != n), s.requestMode.userSelect && s.onSelectComplete(o)) : (s.selection = null, s.triggerOnSelectNothing()), s.shareWithParent(e))
        }, onSelectComplete: function (e) {
            e ? (this.selectedIndex = -1, this.updateSuggestions(this.currentValue)) : this.hide()
        }, triggerOnSelectNothing: function () {
            this.triggering.SelectNothing || this.trigger("SelectNothing", this.currentValue)
        }, trigger: function (e) {
            var t = this, n = _.slice(arguments, 1), i = t.options["on" + e];
            t.triggering[e] = !0, g.isFunction(i) && i.apply(t.element, n), t.el.trigger.call(t.el, "suggestions-" + e.toLowerCase(), n), t.triggering[e] = !1
        }
    }, g.extend(l.prototype, I), C.on("assignSuggestions", I.selectFoundSuggestion), I = {
        setupBounds: function () {
            this.bounds = {from: null, to: null}
        }, setBoundsOptions: function () {
            var n, e = this, t = [], i = g.trim(e.options.bounds).split("-"), s = i[0], o = i[i.length - 1], a = [],
                r = [];
            e.type.dataComponents && g.each(e.type.dataComponents, function () {
                this.forBounds && t.push(this.id)
            }), -1 === g.inArray(s, t) && (s = null), -1 !== (i = g.inArray(o, t)) && i !== t.length - 1 || (o = null), (s || o) && (n = !s, g.each(t, function (e, t) {
                return t == s && (n = !0), r.push(t), n && a.push(t), t != o && void 0
            })), e.bounds.from = s, e.bounds.to = o, e.bounds.all = r, e.bounds.own = a
        }, constructBoundsParams: function () {
            var e = {};
            return this.bounds.from && (e.from_bound = {value: this.bounds.from}), this.bounds.to && (e.to_bound = {value: this.bounds.to}), e
        }, checkValueBounds: function (e) {
            var t, n = this;
            n.bounds.own.length && n.type.composeValue && (t = n.copyBoundedData(e.data, n.bounds.own), e.value = n.type.composeValue(t))
        }, copyBoundedData: function (n, e) {
            var i = {}, s = this.type.dataComponents;
            return s && g.each(e, function (e, t) {
                g.each(s, function () {
                    this.id === t && g.each(this.fields, function (e, t) {
                        null != n[t] && (i[t] = n[t])
                    })
                })
            }), i
        }, getBoundedKladrId: function (e, t) {
            var n, i = t[t.length - 1];
            return g.each(this.type.dataComponents, function (e, t) {
                return t.id === i ? (n = t.kladrFormat, !1) : void 0
            }), e.substr(0, n.digits) + new Array((n.zeros || 0) + 1).join("0")
        }
    }, g.extend(S, {bounds: null}), g.extend(g.Suggestions.prototype, I), C.on("initialize", I.setupBounds).on("setOptions", I.setBoundsOptions).on("requestParams", I.constructBoundsParams), g.fn.suggestions = function (n, i) {
        return 0 === arguments.length ? this.first().data(v) : this.each(function () {
            var e = g(this), t = e.data(v);
            "string" == typeof n ? t && "function" == typeof t[n] && t[n](i) : (t && t.dispose && t.dispose(), t = new l(this, n), e.data(v, t))
        })
    }
});